def payout(outcomes_final:arr, smooth_rep:arr, reports_mask:arr, num_reports, num_events):

    # Event participation (within columns):
    # proportion of reputation that answered each event
    with participation_events = array(num_events):
        with i = 0:
            while i < num_events:
                with k = 0:
                    while k < num_reports:
                        participation_events[i] += smooth_rep[k] * reports_mask[k*num_events + i]
                        k += 1
                participation_events[i] = ONE - participation_events[i]
                i += 1

        # Voter participation (within rows): all events treated equally
        with participation_reports = array(num_reports):
            with i = 0:
                while i < num_reports:
                    with total = 0:
                        with j = 0:
                            while j < num_events:
                                total += reports_mask[i*num_events + j]
                                j += 1
                            participation_reports[i] = ONE - fix(total) / num_events
                        i += 1

                # General participation
                with total = 0:
                    with i = 0:
                        while i < num_events:
                            total += participation_events[i]
                            i += 1
                    with participation = ONE - total / num_events:
                        with reporter_bonus = array(num_reports):
                            with na_bonus_reports = normalize(participation_reports):
                                with i = 0:
                                    while i < num_reports:
                                        reporter_bonus[i] = fixed_multiply(na_bonus_reports[i], participation) + fixed_multiply(smooth_rep[i], ONE - participation)
                                        i += 1
                                return(reporter_bonus: arr)

# inset('macros/constants.se')
# inset('macros/fixed.se')
# inset('macros/arrays.se')
inset('../../macros/constants.sm')
inset('../../macros/fixed.sm')
inset('../../macros/arrays.sm')
